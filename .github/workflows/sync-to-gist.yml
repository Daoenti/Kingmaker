name: Sync Vault to Gist

on:
  push:
    branches: [ main ]
    paths:
      - '**.md'  # Only trigger on markdown changes
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    
    outputs:
      gist_url: ${{ steps.sync_step.outputs.gist_url }}
      gist_id: ${{ steps.sync_step.outputs.gist_id }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
        
    - name: Sync to Gist
      id: sync_step
      env:
        GITHUB_TOKEN: ${{ secrets.GIST_TOKEN }}
        GIST_ID: ${{ secrets.GIST_ID }}
      run: |
        pip install requests
        python3 << 'PYTHON'
        import os, json, requests
        from pathlib import Path

        token = os.environ['GITHUB_TOKEN']
        gist_id = os.environ.get('GIST_ID', '')
        
        # Collect markdown files
        files = {}
        for f in Path('.').rglob('*.md'):
            if not any(x in f.parts for x in ['.git', '.github', '.obsidian', '.trash', '.makemd', '.space', 'Tags']):
                files[str(f).replace('\\', '/')] = f.read_text(encoding='utf-8')
        
        print(f"📁 Found {len(files)} markdown files")
        
        # API setup
        headers = {
            "Authorization": f"token {token}",
            "Accept": "application/vnd.github+json",
        }
        
        payload = {
            "description": "Kingmaker Campaign - Pathfinder",
            "files": {name: {"content": content} for name, content in files.items()}
        }
        
        # Update or create gist
        if gist_id:
            print(f"Updating existing gist: {gist_id}")
            r = requests.patch(f"https://api.github.com/gists/{gist_id}", headers=headers, json=payload)
        else:
            print("Creating new gist...")
            payload["public"] = False
            r = requests.post("https://api.github.com/gists", headers=headers, json=payload)
        
        r.raise_for_status()
        result = r.json()
        
        # Set outputs for GitHub Actions
        with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
            f.write(f"gist_url={result['html_url']}\n")
            f.write(f"gist_id={result['id']}\n")
        
        print("")
        print("=" * 70)
        print("✅ SUCCESS!")
        print("=" * 70)
        print(f"Gist URL: {result['html_url']}")
        print(f"Gist ID:  {result['id']}")
        print("=" * 70)
        
        if not gist_id:
            print("")
            print("⚠️  IMPORTANT - FIRST TIME SETUP:")
            print("=" * 70)
            print(f"Add this as a repository secret named 'GIST_ID':")
            print("")
            print(f"    {result['id']}")
            print("")
            print("Steps:")
            print("1. Go to: https://github.com/Daoenti/Kingmaker/settings/secrets/actions")
            print("2. Click 'New repository secret'")
            print("3. Name: GIST_ID")
            print(f"4. Value: {result['id']}")
            print("=" * 70)
        PYTHON
    
    - name: Display Gist Info
      if: always()
      run: |
        echo "════════════════════════════════════════════════════════════════════"
        echo "                        📝 GIST INFORMATION"
        echo "════════════════════════════════════════════════════════════════════"
        echo ""
        echo "Gist URL: ${{ steps.sync_step.outputs.gist_url }}"
        echo "Gist ID:  ${{ steps.sync_step.outputs.gist_id }}"
        echo ""
        echo "════════════════════════════════════════════════════════════════════"
        
        if [ -z "${{ secrets.GIST_ID }}" ]; then
          echo ""
          echo "⚠️  ACTION REQUIRED: Add GIST_ID Secret"
          echo "════════════════════════════════════════════════════════════════════"
          echo ""
          echo "Copy this Gist ID and add it as a repository secret:"
          echo ""
          echo "    ${{ steps.sync_step.outputs.gist_id }}"
          echo ""
          echo "Instructions:"
          echo "  1. Go to: https://github.com/Daoenti/Kingmaker/settings/secrets/actions"
          echo "  2. Click 'New repository secret'"
          echo "  3. Name: GIST_ID"
          echo "  4. Value: ${{ steps.sync_step.outputs.gist_id }}"
          echo ""
          echo "════════════════════════════════════════════════════════════════════"
        fi
